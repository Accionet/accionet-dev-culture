(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{351:function(a,e,s){"use strict";s.r(e);var t=s(26),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"naming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#naming"}},[a._v("#")]),a._v(" Naming")]),a._v(" "),s("h3",{attrs:{id:"nombres-con-sentido"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nombres-con-sentido"}},[a._v("#")]),a._v(" Nombres con sentido")]),a._v(" "),s("p",[a._v("Una de las tareas m√°s dif√≠cil de programar es dar con buenos nombres a las variables y funciones, debe ser corto pero a la vez explicativo. Evitar nombres que no sean explicativos:")]),a._v(" "),s("h5",{attrs:{id:"no-hacer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#no-hacer"}},[a._v("#")]),a._v(" No hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" theThing "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("h3",{attrs:{id:"evitar-abreviaciones"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#evitar-abreviaciones"}},[a._v("#")]),a._v(" Evitar abreviaciones")]),a._v(" "),s("p",[a._v("Se deben evitar abreviaciones o iniciales. Estas dificultan la lectura, lo que para uno puede ser unas iniciales y-o abreviaciones obvia para otro no tiene por qu√© serlo:")]),a._v(" "),s("h5",{attrs:{id:"no-hacer-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#no-hacer-2"}},[a._v("#")]),a._v(" No hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" upi "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'user profile image'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("h5",{attrs:{id:"hacer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hacer"}},[a._v("#")]),a._v(" Hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" message"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" userProfileImage "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'user profile image'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("p",[a._v("Siendo honestos esta regla no est√° libre de excepciones, existen casos en que usar abreviaciones o iniciales est√° bien, por ejemplo "),s("code",[a._v("bbdd")]),a._v(" o usar un iterador "),s("code",[a._v("i")]),a._v(" en vez de "),s("code",[a._v("index")]),a._v(". Sin embargo, como regla general se deben reducir al m√≠nimo las abreviaciones.")]),a._v(" "),s("h3",{attrs:{id:"ingles"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ingles"}},[a._v("#")]),a._v(" Ingl√©s")]),a._v(" "),s("p",[a._v("¬°Se programa en ingl√©s! Esto es algo medio contra-intuitivo considerando que somos Chilenos y hablamos Chileno. Entonces, ¬øpor qu√© en ingl√©s? La principal raz√≥n es porque la programaci√≥n es un lenguaje universal que no depende del pa√≠s. Ac√° un listado de m√°s razones:")]),a._v(" "),s("ul",[s("li",[a._v("A la mente le cuesta leer spanglish, el proceso mental de saltar de un idioma a otro es dif√≠cil. Los lenguajes de programaci√≥n de por si son en ingl√©s, por lo que programar en espa√±ol te genera confusi√≥n.")]),a._v(" "),s("li",[a._v("Expandiendo sobre el mismo tema, las librer√≠as y frameworks son en ingl√©s, por lo que mezclar idiomas dificulta la lectura.")]),a._v(" "),s("li",[a._v("Pueden haber colegas que hablan distintos idiomas (hoy o en el futuro), por lo que se tiene que programar en un idioma com√∫n: ingl√©s.")]),a._v(" "),s("li",[a._v("Por √∫ltimo es una buena opci√≥n para practicar ingl√©s üòÉ")])]),a._v(" "),s("p",[s("a",{attrs:{href:"https://softwareengineering.stackexchange.com/questions/1483/do-people-in-non-english-speaking-countries-code-in-english",target:"_blank",rel:"noopener noreferrer"}},[a._v("Ac√°"),s("OutboundLink")],1),a._v(" hay una interesante discusi√≥n al respecto, donde se debate para ambos lados.")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("Consejo Personal")]),a._v(" "),s("p",[a._v("Para los programadores que no se manejen bien en ingl√©s esto puede algo muy dif√≠cil, pero mi recomendaci√≥n es que intenten de familiarizarse en ingl√©s. Las documentaciones, las mejores preguntas/respuestas de los foros, los blogs, etc. suelen estar en ingl√©s.")])]),a._v(" "),s("h3",{attrs:{id:"boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[a._v("#")]),a._v(" Boolean")]),a._v(" "),s("p",[a._v('La convenci√≥n m√°s com√∫n sobre booleans es una el prefijo "is" o "has", por ejemplo, '),s("code",[a._v("isActive")]),a._v(" o "),s("code",[a._v("hasAccess")]),a._v(". Se asemeja m√°s al lenguaje natural que si la llamamos "),s("code",[a._v("active")]),a._v(".")]),a._v(" "),s("p",[a._v("Como segunda ley: ¬°Piensa positivo! las variables boolean tienen que ser positivas, por ejemplo llamar la variable "),s("code",[a._v("isActive")]),a._v(" y no "),s("code",[a._v("isNotActive")]),a._v(". Y la raz√≥n es simple, la negaci√≥n de una variable negativa es confusa: "),s("code",[a._v("!isNotActive")]),a._v(", a nuestro cerebro le cuesta procesar una doble negaci√≥n.")]),a._v(" "),s("p",[a._v("M√°s sobre booleans "),s("a",{attrs:{href:"https://dev.to/michi/tips-on-naming-boolean-variables-cleaner-code-35ig#:~:text=There%20is%20a%20convention%20to,just%20thrown%20out%20the%20window",target:"_blank",rel:"noopener noreferrer"}},[a._v("ac√°"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("h3",{attrs:{id:"funciones"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#funciones"}},[a._v("#")]),a._v(" Funciones")]),a._v(" "),s("p",[a._v("Cada funci√≥n es una accion, por ende el nombre debe contener al menos un verbo. No est√° de m√°s repetir que los nombres deben ser auto explicativos y evitar abreviaciones.")]),a._v(" "),s("h4",{attrs:{id:"no-hacer-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#no-hacer-3"}},[a._v("#")]),a._v(" no hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("absoluteDifference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// falta un verbo")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("inc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Abreviaci√≥n, es increase, increment, include?")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getAbsoluteDifferrenceOfTwoNumbers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// innecesariamente largo")]),a._v("\n")])])]),s("h4",{attrs:{id:"hacer-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hacer-2"}},[a._v("#")]),a._v(" hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getAbsoluteDifference")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("increase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n")])])]),s("p",[a._v("Para m√°s sobre nombrando funciones, recomiendo "),s("a",{attrs:{href:"https://dmitripavlutin.com/coding-like-shakespeare-practical-function-naming-conventions/",target:"_blank",rel:"noopener noreferrer"}},[a._v("este"),s("OutboundLink")],1),a._v(" art√≠culo.")]),a._v(" "),s("h3",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[a._v("#")]),a._v(" Array")]),a._v(" "),s("p",[a._v("Los nombres de los arreglos deben ser en plural. "),s("code",[a._v("students.forEach((student) => {... })")]),a._v(";")]),a._v(" "),s("h3",{attrs:{id:"conclusion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[a._v("#")]),a._v(" Conclusi√≥n")]),a._v(" "),s("p",[a._v("Como conclusi√≥n, al programar hay que intentar de imitar el lenguaje natural. Esto va a facilitar la lectura y comprensibilidad del c√≥digo ¬°T√≥mate un minuto para pensar los nombres!")]),a._v(" "),s("h2",{attrs:{id:"cases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cases"}},[a._v("#")]),a._v(" Cases")]),a._v(" "),s("p",[a._v("Lo m√°s importante con los cases es ser consistentes, esta consistencia muchas veces depende del lenguaje, es decir distintos lenguajes usan distintos cases, Existen distintos tipos de cases:")]),a._v(" "),s("ul",[s("li",[a._v("camelCase")]),a._v(" "),s("li",[a._v("PascalCase")]),a._v(" "),s("li",[a._v("TRAIN-CASE")]),a._v(" "),s("li",[a._v("snake_case")]),a._v(" "),s("li",[a._v("kebab-case")]),a._v(" "),s("li",[a._v("MACRO_CASE")])]),a._v(" "),s("h3",{attrs:{id:"variables-y-funciones"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variables-y-funciones"}},[a._v("#")]),a._v(" Variables y Funciones")]),a._v(" "),s("p",[a._v("En javascript las variables y funciones se escriben en camelCase.")]),a._v(" "),s("h3",{attrs:{id:"constantes-globales"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constantes-globales"}},[a._v("#")]),a._v(" Constantes Globales")]),a._v(" "),s("p",[a._v('Las variables que son una constante "global" se escriben en MACRO_CASE. No confundir con variables definidas con '),s("code",[a._v("const")]),a._v(", por constante global nos referimos a variables cuyo valor es una verdad absoluta, est√° fijo, jam√°s ser√° cambiado y, normalmente, no depende de par√°metros. Por lo general estas constantes son declaradas al comienzo del archivo.")]),a._v(" "),s("h4",{attrs:{id:"no-hacer-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#no-hacer-4"}},[a._v("#")]),a._v(" No Hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("STUDENT_NAME")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getStudentName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("studentId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Si bien "),s("code",[a._v("STUDENT_NAME")]),a._v(' es una constante y que no va a ser cambiada, depende de parametros y no es una constante "global", por ende deber√≠a estar en camelCase.')]),a._v(" "),s("h4",{attrs:{id:"hacer-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hacer-3"}},[a._v("#")]),a._v(" Hacer")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GRAVITY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9.8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("TIMEOUT")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ONE_DAY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v('En todos estos casos estas variables son "verdades absolutas".')]),a._v(" "),s("h3",{attrs:{id:"clases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clases"}},[a._v("#")]),a._v(" Clases")]),a._v(" "),s("p",[a._v("Las clases se declaran en PascalCase y las instancias en camelCase:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("VikingWarrior")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" ragnarLothbrok "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("VikingWarrior")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"archivos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#archivos"}},[a._v("#")]),a._v(" Archivos")]),a._v(" "),s("p",[a._v("En Accionet se ha optado por usar kebab-case para los archivos y directorios. Esta resoluci√≥n es relativamente reciente, por lo que varios archivos est√°n en camelCase.")]),a._v(" "),s("h3",{attrs:{id:"bbdd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bbdd"}},[a._v("#")]),a._v(" BBDD")]),a._v(" "),s("p",[a._v("Por lo general las base de datos, y en particular postgreSQL, no son case sensitive, por lo que camelCase no es opci√≥n. La convensi√≥n que usamos en Accionet es usar snake_case.")]),a._v(" "),s("h3",{attrs:{id:"propiedades-de-json-javascript-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#propiedades-de-json-javascript-objects"}},[a._v("#")]),a._v(" Propiedades de JSON - Javascript Objects")]),a._v(" "),s("p",[a._v("Si bien ac√° no existe una convenci√≥n general y depende del caso, en Accionet preferimos camelCase. Sin embargo, existen varias excepciones, por ejemplo cuando el objeto representa una entrada de la base de datos, el case correcto ser√≠a snake_case para ser consistente con la BB.DD.")]),a._v(" "),s("h3",{attrs:{id:"css-y-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-y-html"}},[a._v("#")]),a._v(" css y html")]),a._v(" "),s("p",[a._v("Las variables de css y html se escriben con kebab-case.")]),a._v(" "),s("h3",{attrs:{id:"variables-de-entorno"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variables-de-entorno"}},[a._v("#")]),a._v(" Variables de Entorno")]),a._v(" "),s("p",[a._v("Las variables de entorno por naturaleza son Constantes Globales, por ende se deben escribir en MACRO_CASE.")]),a._v(" "),s("h2",{attrs:{id:"usar-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usar-variables"}},[a._v("#")]),a._v(" Usar Variables")]),a._v(" "),s("p",[a._v("Esto puede sonar como obvio, pero es muy importante evitar el uso de variables no definidas. Supongamos que queremos calcular la energ√≠a potencial gravitacional, nos podemos ver tentado a escribir lo siguiente:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("calculateGravitationPotentialEnergy")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("mass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" mass "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("¬øEl problema?")]),a._v(" "),s("p",[a._v("Para partir si no estamos familiarizados con la formula no tenemos por qu√© asumir que 10 hace alusi√≥n a la gravedad. Segundo ¬øqu√© pasa si decidimos usar 9.8 en vez de 10? Tendr√≠amos que entrar a bucear en el c√≥digo buscando cada vez que usamos la gravedad y cambiarla manual, suena a posible error. Mejor guardarlo una vez en una variable global:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GRAVITY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("calculateGravitationPotentialEnergy")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("mass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" mass "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GRAVITY")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"linter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linter"}},[a._v("#")]),a._v(" Linter")]),a._v(" "),s("p",[a._v("En Accionet se utiliza "),s("a",{attrs:{href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ESLint"),s("OutboundLink")],1),a._v(". Este nos permite definir un estilo de programaci√≥n, es muy importante que todo el equipo utilize el mismo estilo, esto facilatar√° la compresi√≥n del c√≥digo de otro miembro. El linter ser√° responsable de ir indicando ciertos errores y advertencias. No podremos mergear una "),s("RouterLink",{attrs:{to:"/git.html#pull-request-code-review"}},[a._v("Pull Request")]),a._v(" si el linter est√° arrojando errores.")],1),a._v(" "),s("h2",{attrs:{id:"comentarios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comentarios"}},[a._v("#")]),a._v(" Comentarios")]),a._v(" "),s("p",[a._v("Esto es algo muy controversial, ¬øse debe comentar el c√≥digo? En Accionet desincentivamos el uso de comentarios, es preferible un c√≥digo sin cometarios que uno con. Esto es un concepto contra-intuitivo, los comentarios ayudan a entender mejor el c√≥digo ¬øpor qu√© vetar su uso?")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v('"El c√≥digo nunca mienta, los comentarios a veces si"')]),a._v(" Es muy com√∫n encontrarse con comentarios desactualizados, esto puede llevar a confusi√≥n. Los comentarios requieren un trabajo muy prolijo de mantenci√≥n, en la practica esto rara vez ocurre, por ende mejor evitarlos.")]),a._v(" "),s("li",[s("strong",[a._v('"El c√≥digo es c√≥mo un chiste, si hay que explicarlo es malo"')]),a._v(" Un buen c√≥digo no debiese requerir de comentarios. Si no se entiende por si solo es un indicio de que se debe reescribir o modificar.")])]),a._v(" "),s("p",[a._v("Dicho todo lo anterior, hay excepciones pero son las menos. Un cl√°sico contra ejemplo son casos bordes no esperables, aveces uno debe agregar un c√≥digo para cubrir un caso borde no obvio, por muy auto-explicativo puede requerir un comentario para ponerlo en contexto.")]),a._v(" "),s("h2",{attrs:{id:"logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logs"}},[a._v("#")]),a._v(" Logs")]),a._v(" "),s("p",[a._v("En producci√≥n no deben haber "),s("code",[a._v("console.log()")]),a._v(". Por dos razones:")]),a._v(" "),s("ol",[s("li",[a._v("Es lento imprimir a la consola.")]),a._v(" "),s("li",[a._v("Los logs pueden exponer informaci√≥n sensible.")])]),a._v(" "),s("p",[a._v("Sin embargo los logs tienen un uso importante en Accionet, pero se deben utilizar a trav√©s de una alerta de "),s("code",[a._v("codemaster")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" codemaster "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'codemaster'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n  codemaster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("alert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'esto es una alerta'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Todos los servidores de Accionet est√°n configurados de tal manera que se mande una notificaci√≥n v√≠a email cada vez que se imprime una alerta. Usar sabiamente las alerta para poder monitorear la salud de los servidores, ser notificados frente a bugs inesperados y contar con la informaci√≥n necesaria para poder debuggear.")]),a._v(" "),s("h2",{attrs:{id:"tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tests"}},[a._v("#")]),a._v(" Tests")]),a._v(" "),s("h3",{attrs:{id:"¬øpor-que-testear"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#¬øpor-que-testear"}},[a._v("#")]),a._v(" ¬øPor qu√© testear?")]),a._v(" "),s("p",[a._v("En un software es muy importante que sea flexible, que se le puedan agregar y/o modificar funcionalidades. Sin embargo cuando tenemos un c√≥digo en producci√≥n el riesgo de agregar algo y que se rompa todo es gigantesco. Los tests nos permiten ir verificando que todo siga funcionando correctamente.")]),a._v(" "),s("h3",{attrs:{id:"que-tests-hacer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#que-tests-hacer"}},[a._v("#")]),a._v(" Qu√© Tests Hacer")]),a._v(" "),s("p",[a._v("Existe tres tipos de tests:")]),a._v(" "),s("ul",[s("li",[a._v("Test Unitarios: Son test at√≥micos. Deben revisar que un m√©todo haga lo esperado.")]),a._v(" "),s("li",[a._v("Test Integraci√≥n: Estos tests son de m√°s alto nivel y buscan revisar que la interacci√≥n entre distintas partes del c√≥digo funcionen bien.")]),a._v(" "),s("li",[a._v("Test Funcionales: Estos ya se preocupan m√°s de la funcionalidad que del c√≥digo. Revisa que el software haga lo esperado.")])]),a._v(" "),s("p",[a._v("En Accionet los desarrolladores son los responsables de hacer los tests unitarios y los tests de integraci√≥n. "),s("RouterLink",{attrs:{to:"/git.html#continuous-integration"}},[a._v("Continuous Integration")]),a._v(" va a revisar que estos tests pasen para permitir mergear una "),s("RouterLink",{attrs:{to:"/git.html#pull-request-code-review"}},[a._v("Pull Request")]),a._v(".")],1),a._v(" "),s("h3",{attrs:{id:"como"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#como"}},[a._v("#")]),a._v(" C√≥mo")]),a._v(" "),s("p",[a._v("A la hora de hacer tests uno debe preocuparse que todos los caminos est√©n cubiertos. Es decir, que entre a cada if, else if, else, a cada loop, a cada switch etc.")]),a._v(" "),s("p",[a._v("Lo segundo que uno debe preocuparse son los par√°metros. Por ejemplo:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("openEachWindow")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("house")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" house"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" window "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" house"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n      window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("¬øQu√© pasa si "),s("code",[a._v("house")]),a._v(" es null? ¬øQu√© pasa si "),s("code",[a._v("house.windows")]),a._v(" es null?")]),a._v(" "),s("p",[a._v("Otro elemento importante es pensar en casos bordes y posibles errores que puedan surgir. Por ejemplo:")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("calculateHousesPerTrees")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("houses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" trees")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" houses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" trees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("¬øQu√© pasa si "),s("code",[a._v("trees")]),a._v(" es un arreglo vac√≠o (length = 0)?")]),a._v(" "),s("h3",{attrs:{id:"donde"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#donde"}},[a._v("#")]),a._v(" D√≥nde")]),a._v(" "),s("p",[a._v("Los tests se guardan en el directorio "),s("code",[a._v("/test/integration-unit-testing")]),a._v(". La estructura de los archivo debe emular a la del servidor. Es decir, los tests del m√©todo "),s("code",[a._v("openMainDoor()")]),a._v(", del archivo "),s("code",[a._v("/server/models/house")]),a._v(", deben ser escritos en el archivo "),s("code",[a._v("/test/integration-unit-testing/server/models/house/openMainDoor.js")]),a._v(".")]),a._v(" "),s("h3",{attrs:{id:"cobertura"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cobertura"}},[a._v("#")]),a._v(" Cobertura")]),a._v(" "),s("p",[a._v("Para medir que los tests tengan una cobertura adecuada, "),s("RouterLink",{attrs:{to:"/git.html#continuous-integration"}},[a._v("Continuous Integration")]),a._v(" va a revisar que % de las l√≠neas de c√≥digo, de las funciones, de las branches y de los statements est√°n siendo testeadas.")],1),a._v(" "),s("h3",{attrs:{id:"metodo-intesteable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metodo-intesteable"}},[a._v("#")]),a._v(" M√©todo intesteable")]),a._v(" "),s("p",[a._v('Si en alg√∫n momento te encuentras frente a un m√©todo y llegas a la conclusi√≥n "este m√©todo es imposible de testear", esto significa que ese m√©todo debe ser sub dividido en m√©todos m√°s simples y f√°ciles de testear.')])])}),[],!1,null,null,null);e.default=n.exports}}]);